services:
  database:
    container_name: database
    build: ./backend/database/db_setup
    image: pl-postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "pl_stats", "-h", "database", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=pl_stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_CONTAINER=database
      - POSTGRES_PORT=5432

  local-data-ingestion:
    container_name: local-data-ingestion
    build: ./backend/database/ingestion
    image: local-data-ingestion
    depends_on:
      database:
        condition: service_healthy
    environment:
      - POSTGRES_DB=pl_stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_CONTAINER=database
      - POSTGRES_PORT=5432
    # healthcheck:
    #   test: ["CMD-SHELL", "docker logs pl_data_ingestion 2>&1 | grep -q 'Data Intake: COMPLETE'"]
    #   interval: 30s
    #   timeout: 3s
    #   retries: 20

  api:
    container_name: api
    build: ./backend
    image: api
    depends_on:
      - local-data-ingestion
        # condition: service_healthy
    environment:
      - POSTGRES_DB=pl_stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_CONTAINER=database
      - POSTGRES_PORT=5432
      - PREDICT_API_URL=http://predict:8008/predict
    ports:
      - 8080:8080
  
  predict:
    container_name: predict
    build: ./predict/
    image: pl-predictor
    depends_on:
      - local-data-ingestion
        # condition: service_healthy
    environment:
      - POSTGRES_DB=pl_stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_CONTAINER=database
      - POSTGRES_PORT=5432
      - batch_size=64
      - dropout=0.3
      - epochs=15
      - hidden_layer_one=10
      - learn_rate=0.0001
      - n_h_layers=4
    ports:
      - 8008:8008

  frontend:
    container_name: frontend
    build: ./frontend/
    image: frontend
    depends_on:
      - api
        # condition: service_healthy
    ports:
      - 3000:3000
    environment:
      - POSTGRES_DB=pl_stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_CONTAINER=database
      - POSTGRES_PORT=5432
      - API_URL=http://api:8080
      - PREDICT_API_URL=http://predict:8008
      - PUBLIC_URL=/

